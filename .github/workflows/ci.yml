name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

env:
  CARGO_TERM_COLOR: always

jobs:
  # コード品質チェック
  code-quality:
    name: Code Quality
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    - name: Rust format check
      run: cargo fmt --check
      working-directory: src-tauri
    - name: Rust lint check
      run: cargo clippy -- -W warnings
      working-directory: src-tauri
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: ESLint check
      run: npm run lint --if-present

  # テスト実行
  test:
    name: Test Suite
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Run Rust tests
      run: cargo test --verbose
      working-directory: src-tauri
    - name: Run frontend tests
      run: npm test --if-present

  # ビルドテスト
  build-test:
    name: Build Test
    runs-on: windows-latest
    needs: [code-quality, test]
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Build application
      run: npm run tauri build

  # リリースビルド
  release:
    name: Release Build
    runs-on: windows-latest
    needs: build-test
    if: github.event_name == 'release'
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Build application for release
      run: npm run tauri build
    - name: Upload release assets
      uses: actions/upload-artifact@v4
      with:
        name: booth-organizer-windows
        path: |
          src-tauri/target/release/bundle/nsis/*.exe


  # デプロイメント
  deploy:
    name: Deploy Release
    runs-on: ubuntu-latest
    needs: release
    if: github.event_name == 'release'
    steps:
    - uses: actions/checkout@v4
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    - name: Display structure of downloaded files
      run: ls -la
    - name: Upload to GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          booth-organizer-windows/*.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

